const mongoose = require('mongoose');

/**
 * Modèle Mongoose pour les malwares
 */
const MalwareSchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
    unique: true,
    trim: true
  },
  aliases: [{
    type: String,
    trim: true
  }],
  description: {
    type: String
  },
  type: {
    type: String,
    enum: ['Ransomware', 'Trojan', 'Backdoor', 'Worm', 'Spyware', 'Adware', 'Rootkit', 'Bootkit', 'RAT', 'Keylogger', 'Other'],
    default: 'Other'
  },
  firstSeen: {
    type: Date
  },
  lastSeen: {
    type: Date
  },
  associatedGroups: [{
    type: String,
    trim: true
  }],
  techniques: [{
    type: String,
    trim: true
  }],
  targetPlatforms: [{
    type: String,
    trim: true
  }],
  capabilities: [{
    type: String,
    trim: true
  }],
  references: [{
    url: {
      type: String,
      required: true
    },
    source: {
      type: String,
      required: true
    },
    description: {
      type: String
    }
  }],
  threatLevel: {
    type: Number,
    min: 1,
    max: 10,
    default: 5
  },
  createdAt: {
    type: Date,
    default: Date.now
  },
  updatedAt: {
    type: Date,
    default: Date.now
  }
}, {
  timestamps: true
});

// Index pour les recherches textuelles
MalwareSchema.index({ 
  name: 'text', 
  aliases: 'text', 
  description: 'text' 
});

// Middleware pour mettre à jour la date de dernière modification
MalwareSchema.pre('save', function(next) {
  this.updatedAt = Date.now();
  next();
});

// Méthode pour obtenir les groupes d'attaque associés
MalwareSchema.methods.getAttackGroups = async function() {
  const AttackGroup = mongoose.model('AttackGroup');
  return await AttackGroup.find({ name: { $in: this.associatedGroups } });
};

// Méthode pour obtenir les techniques utilisées
MalwareSchema.methods.getTechniques = async function() {
  const Technique = mongoose.model('Technique');
  return await Technique.find({ mitreId: { $in: this.techniques } });
};

// Méthode pour obtenir les campagnes associées
MalwareSchema.methods.getCampaigns = async function() {
  const Campaign = mongoose.model('Campaign');
  return await Campaign.find({ malware: this.name });
};

const Malware = mongoose.model('Malware', MalwareSchema);

module.exports = Malware;
